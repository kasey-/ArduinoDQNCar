extern "C"{
  #include "genann.h"
};
#include <timer.h>
#include "ServoTimer2.h"
#include <L298N.h>

float weights[] = {
    0.0420422271, -0.0038503592, -0.8664641140, 1.3455101234, -0.2965114467, 0.6939601972, 0.5681184072,
    0.0142313652, -0.1351784786, -0.4103034825, -0.5818249489, 0.0705752725, 0.5702321417, 0.1749988714,
    0.5427678887, -0.4988566011, 0.1950866147, 1.7791817167, -0.7706793492, -0.3929772789, -0.5309130733,
    -1.0000000183, -1.4587537539, 0.1941243028, 1.0402623926, -1.4253798929, 1.6049297099, 1.6019506803,
    -0.1762370734, 0.3952852029, 0.8004168292, -1.2433683693, 0.1621864869, -0.0912684812, 0.0227463749,
    0.0209057062, -0.2399254653, -0.3323011127, -0.4117048306, -0.5895117857, 0.0804841680, 0.2823083686,
    0.4430509384, -0.0517747668, 0.3017477646, 0.8176499606, -0.4097635804, -0.3149985229, 0.1716949427,
    0.6200255974, 0.8587374695, 1.1304896200, -1.1682725492, 0.2231698868, -1.4373217224, -1.5728543900,
    0.2019538242, -0.0845997872, 0.2184724881, -0.6245255145, -1.0684552471, 0.2067761294, 0.1333479668,
    -0.2543612312, 0.1599766602, 0.3828476357, 0.1354194040, 0.0572091206, 0.3899718055, 0.4588567480,
    -0.2234281657, -0.1255856000, 0.1773226564, -0.4613853415, 0.6388381859, -1.7175475044, -0.8208084688,
    0.6627022710, -0.2192306155, 0.4908630455, -0.0958893035, 0.0346849690, 1.7325986026, 0.2942238115,
    -0.2182990116, 0.2984776531, -0.4640723967, -0.6171442909, -0.3430974953, -0.1809515558, -0.0999676106,
    0.5177095292, 0.0975414224, -0.1463992486, 0.1564256988, -0.6106203246, -1.0466708130, 0.2560882535,
    -0.4002928257, -0.3269859241, 0.7726807332, -1.0324154225, -0.9523035992, 0.7727296689, -1.0353886819,
    -0.2639769229, 1.3868327706, 0.1701648579, -0.4697423250, 0.1189787660, 0.0553469914, 0.8957568190,
    -0.0351995830, 1.0366360167, 1.8040003308, -0.9789309879, 0.3584917723, 0.1093290638, -1.4359025791,
    0.0924706773, 0.1325634991, -0.1073051448, -0.0813102205, 0.3884635201, -0.2085393512, -0.7830284020,
    0.2552681930, 0.1631956489, 0.5415212242, 1.2627674790, -0.4591420501, -0.0114865149, 0.6170172017,
    0.2468013777, 1.4542779905, -0.3581772003, -0.6649344702, -0.3242771810, 0.3833328483, -0.1677652063,
    1.9521529581, -0.2583907384, 1.3159955364, 1.6203218700, -2.0217547020, 0.3454478268
};

genann *ann;
float average = 0.0;

void setup() {
  Serial.begin(115200);
  ann = genann_init(6, 2, 16, 2);
  
  for (int i = 0; i < ann->total_weights; i++)
    ann->weight[i] = weights[i];
}

void predict(double in0, double in1, double in2, double in3, double in4, double in5) {
  double input[6];
  input[0] = in0;
  input[1] = in1;
  input[2] = in2;
  input[3] = in3;
  input[4] = in4;
  input[5] = in5;
  unsigned long start = micros();
  const double *output = genann_run(ann, input); // 4140 us
  unsigned long load = micros() - start;
  average = average * 0.99 + load * 0.01;
  Serial.print(output[0], DEC);
  Serial.print(" ");
  Serial.print(output[1], DEC);
  Serial.print(" ");
  Serial.println(average,DEC);  
}

void loop() {
  predict(0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
  predict(1.0, 0.0, 0.0, 0.0, 0.0, 0.0);
  predict(0.0, 1.0, 0.0, 0.0, 0.0, 0.0);
  predict(0.0, 0.0, 1.0, 0.0, 0.0, 0.0);
  predict(0.0, 0.0, 0.0, 1.0, 0.0, 0.0);
  predict(0.0, 0.0, 0.0, 0.0, 1.0, 0.0);
  predict(1.0, 0.0, 0.0, 0.0, 0.0, 1.0);
  delay(10000000);
}
